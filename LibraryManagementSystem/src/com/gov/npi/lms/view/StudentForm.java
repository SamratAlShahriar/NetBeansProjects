package com.gov.npi.lms.view;

import com.gov.npi.lms.connection.DbConnection;
import com.gov.npi.lms.domain.BookInformation;
import com.gov.npi.lms.domain.Student;
import com.gov.npi.lms.navigation.NavigationMenu;
import com.gov.npi.lms.service.StudentService;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Samrat Al Shahriar Nayeem
 */
public class StudentForm extends javax.swing.JFrame {

    Connection conn = DbConnection.getConnection();

    /**
     * Creates new form StudentForm
     */
    public StudentForm() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        refreshTable();
        setJMenuBar(NavigationMenu.commonNavMenu(this));
        setAppIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroupShift = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDisplay = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtReg = new javax.swing.JTextField();
        txtRoll = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbDepartment = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        rdbFirstShift = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        rdbSecondShift = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        cmbSession = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtPhoneNo = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtHouseNo = new javax.swing.JTextField();
        txtRoadNo = new javax.swing.JTextField();
        txtBlockOrVillage = new javax.swing.JTextField();
        txtThana = new javax.swing.JTextField();
        txtDistrict = new javax.swing.JTextField();
        txtDivision = new javax.swing.JTextField();
        cmbCountry = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        lblMsg = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Information || LMS");

        tblDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Student Name", "Reg. No.", "Roll No.", "Department/Technology", "Shift", "Session", "Phone No", "Address"
            }
        ));
        tblDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDisplayMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDisplay);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Shift :");

        txtReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegActionPerformed(evt);
            }
        });

        txtRoll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRollActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Student Name :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Reg. No :");

        cmbDepartment.setEditable(true);
        cmbDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Department/Technology", "AIRCRAFT MAINTENANCE (AEROSPACE) TECHNOLOGY (82)", "AIRCRAFT MAINTENANCE (AVIONICS) TECHNOLOGY (83)", "ARCHITECTURE ADN INTERIOR DESIGN TECHNOLOGY (87", "ARCHITECTURE TECHNOLOGY (61)", "AUTOMOBILE TECHNOLOGY (62)", "CERAMIC TECHNOLOGY (76)", "CHEMICAL TECHNOLOGY (63)", "CIVIL (WOOD) TECHNOLOGY (65)", "CIVIL TECHNOLOGY (64)", "COMPUTER SCIENCE & TECHNOLOGY (85)", "COMPUTER TECHNOLOGY (66)", "CONSTURCTION TECHNOLOGY (88)", "DATA TELECOMMUNICATION AND NETWORK TECHNOLOGY (84)", "ELECTRICAL TECHNOLOGY (67)", "ELECTROMEDICAL TECHNOLOGY (86)", "ELECTRONICS TECHNOLOGY (68)", "ENVIRONMENTAL TECHNOLOGY (90)", "FOOD TECHNOLOGY (69)", "GLASS TECHNOLOGY (77)", "GRAPHIC DESIGN TECHNOLOGY (96)", "INSTRUMENTATION & PEOCESS CONTROL TECHNOLOGY (91)", "MACHANICAL TECHNOLOGY (70)", "MARINE TECHNOLOGY (79)", "MECHATRONICS TECHNOLOGY", "MINING & MINE SURVEY TECHNOLOGY (93)", "POWER TECHNOLOGY (71)", "PRINTING TECHNOLOGY (95)", "REFREGERATION & AIR CONDITIONING TECHNOLOGY(72)", "SHIPBULDING TECHNOLOGY (80)", "SURVEYING TECHNOLOGY (78)", "TELECOMMUNICATION TECHNOLOGY (94)" }));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Roll No :");

        buttonGroupShift.add(rdbFirstShift);
        rdbFirstShift.setText("1st");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Department :");

        buttonGroupShift.add(rdbSecondShift);
        rdbSecondShift.setText("2nd");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(153, 255, 204));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Basic Information");

        cmbSession.setEditable(true);
        cmbSession.setForeground(new java.awt.Color(0, 102, 102));
        cmbSession.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Session", "2017\t-\t18", "2016\t-\t17", "2015\t-\t16", "2014\t-\t15", "2013\t-\t14", "2012\t-\t13", "2011\t-\t12", "2010\t-\t11", "2009\t-\t10", "2008\t-\t09", "2007\t-\t08", "2006\t-\t07", "2005\t-\t06", "2004\t-\t05", "2003\t-\t04", "2002\t-\t03", "2001\t-\t02", "2000\t-\t01", "1999\t-\t00", "1998\t-\t99", "1997\t-\t98", "1996\t-\t97", "1995\t-\t96", "1994\t-\t95", "1993\t-\t94", "1992\t-\t93", "1991\t-\t92", "1990\t-\t91", "1989\t-\t90", "1988\t-\t89", "1987\t-\t88", "1986\t-\t87", "1985\t-\t86", "1984\t-\t85", "1983\t-\t84", "1982\t-\t83", "1981\t-\t82", "1980\t-\t81", "1979\t-\t80", "1978\t-\t79", "1977\t-\t78", "1976\t-\t77", "1975\t-\t76", "1974\t-\t75", "1973\t-\t74", "1972\t-\t73", "1971\t-\t72", "1970\t-\t71", "1969\t-\t70", "1968\t-\t69" }));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("Session :");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Phone No. :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel17)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbSession, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rdbFirstShift)
                        .addGap(39, 39, 39)
                        .addComponent(rdbSecondShift)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtName)
                    .addComponent(txtReg)
                    .addComponent(txtRoll)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(90, 90, 90))
                    .addComponent(cmbDepartment, 0, 0, Short.MAX_VALUE)
                    .addComponent(txtPhoneNo))
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtRoll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(cmbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(rdbFirstShift)
                    .addComponent(rdbSecondShift))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Division :");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Country :");

        cmbCountry.setEditable(true);
        cmbCountry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Country", "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burundi", "Cabo Verde", "Cambodia", "Cameroon", "Canada", "Central African Republic (CAR)", "Chad", "Chile", "China", "Colombia", "Comoros", "Democratic Republic of the Congo", "Republic of the Congo", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia", "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Honduras", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macedonia (FYROM)", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Myanmar (Burma)", "Namibia", "Nauru", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "North Korea", "Norway", "Oman", "Pakistan", "Palau", "Palestine", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Timor-Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates (UAE)", "United Kingdom (UK)", "United States of America (USA)", "Uruguay", "Uzbekistan", "Vanuatu", "Vatican City (Holy See)", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe" }));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("House No. :");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Road No. :");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Block/Village :");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Thana :");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("District :");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 255, 204));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Address Information");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbCountry, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtHouseNo)
                    .addComponent(txtRoadNo)
                    .addComponent(txtBlockOrVillage)
                    .addComponent(txtThana)
                    .addComponent(txtDistrict)
                    .addComponent(txtDivision))
                .addGap(37, 37, 37))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(122, 122, 122))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtHouseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtRoadNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtBlockOrVillage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtThana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtDivision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cmbCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSave.setBackground(new java.awt.Color(0, 102, 102));
        btnSave.setText("Save");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 102, 0));
        btnUpdate.setText("Update");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(102, 153, 0));
        btnDelete.setText("Delete");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(153, 204, 0));
        btnReset.setText("Reset");
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(0, 153, 51));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 26)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 255, 0));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Student Information");

        jLabel26.setBackground(new java.awt.Color(0, 204, 204));
        jLabel26.setFont(new java.awt.Font("Monotype Corsiva", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 255, 204));
        jLabel26.setText("Library Management System");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel26)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel26)
                .addGap(18, 18, 18)
                .addComponent(jLabel23)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        lblMsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(45, 45, 45)
                .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(46, 46, 46)
                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(46, 46, 46)
                .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(243, 243, 243))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane2)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblMsg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnReset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegActionPerformed
        try {
            StudentService studentService = new StudentService();
            Student student = studentService.getUserByRegNo(txtReg.getText());

            if (txtReg.getText().equals(student.getRegistrationNo())) {
                PreparedStatement stmt = conn.prepareStatement("SELECT * FROM lmsdb_student WHERE registration_no=?");
                stmt.setString(1, txtReg.getText());
                ResultSet rs = stmt.executeQuery();
                while (rs.next()) {
                    txtName.setText(rs.getString(2));
                    txtReg.setText(rs.getString(3));
                    txtRoll.setText(rs.getString(4));
                    cmbDepartment.setSelectedItem(rs.getString(5));
                    if (rs.getString(6).equals("1st")) {
                        rdbFirstShift.setSelected(true);
                    } else if (rs.getString(6).equals("2nd")) {
                        rdbSecondShift.setSelected(true);
                    } else {
                        buttonGroupShift.clearSelection();
                    }
                    //rdbSecondShift.setText(rs.getString(6));
                    cmbSession.setSelectedItem(rs.getString(7));
                    txtPhoneNo.setText(rs.getString(8));
                    txtHouseNo.setText(rs.getString(9));
                    txtRoadNo.setText(rs.getString(10));
                    txtBlockOrVillage.setText(rs.getString(11));
                    txtThana.setText(rs.getString(12));
                    txtDistrict.setText(rs.getString(13));
                    txtDivision.setText(rs.getString(14));
                    cmbCountry.setSelectedItem(rs.getString(15));

                    //for table display
                    StudentService studentSer = new StudentService();
                    List<Student> pList = studentSer.getListByRegNo(txtReg.getText());
                    DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
//                    model.setColumnCount(0);
//                    String columnAdd[] = {"ID", "Student Name", "Reg. No.", "Roll No.", "Department", "Shift", "Session", "Phone No", "Address"};
//                    for (String a : columnAdd) {
//                        model.addColumn(a);
//                    }

                    model.setRowCount(0);

                    Object[] row = new Object[9];

                    for (int i = 0; i < pList.size(); i++) {
                        row[0] = pList.get(i).getId();
                        row[1] = pList.get(i).getName();
                        row[2] = pList.get(i).getRegistrationNo();
                        row[3] = pList.get(i).getRollNo();
                        row[4] = pList.get(i).getDepartment();
                        row[5] = pList.get(i).getShift();
                        row[6] = pList.get(i).getSession();
                        row[7] = pList.get(i).getPhoneNo();
                        row[8] = pList.get(i).getHouseNo() + ", " + pList.get(i).getRoadNo() + ", " + pList.get(i).getBlockOrVillage() + ", " + pList.get(i).getThana() + ", " + pList.get(i).getDistrict() + ", " + pList.get(i).getDivision() + ", " + pList.get(i).getCountry();

                        model.addRow(row);
                    }

                    tblDisplay.getColumnModel().getColumn(0).setPreferredWidth(10);
                    tblDisplay.getColumnModel().getColumn(1).setPreferredWidth(140);
                    tblDisplay.getColumnModel().getColumn(2).setPreferredWidth(40);
                    tblDisplay.getColumnModel().getColumn(3).setPreferredWidth(40);
                    tblDisplay.getColumnModel().getColumn(4).setPreferredWidth(60);
                    tblDisplay.getColumnModel().getColumn(5).setPreferredWidth(20);
                    tblDisplay.getColumnModel().getColumn(6).setPreferredWidth(40);
                    tblDisplay.getColumnModel().getColumn(7).setPreferredWidth(60);
                    tblDisplay.getColumnModel().getColumn(8).setPreferredWidth(350);
                    tblDisplay.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

                }
                lblMsg.setText("");
            } else {
                txtName.setText("");
                txtRoll.setText("");
                cmbDepartment.setSelectedIndex(0);
                buttonGroupShift.clearSelection();
                cmbSession.setSelectedIndex(0);
                txtPhoneNo.setText("");
                txtHouseNo.setText("");
                txtRoadNo.setText("");
                txtBlockOrVillage.setText("");
                txtThana.setText("");
                txtDistrict.setText("");
                txtDivision.setText("");
                cmbCountry.setSelectedIndex(0);

                lblMsg.setText("No Student information found.");
            }

        } catch (SQLException ex) {
            Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtRegActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtName.setText("");
        txtReg.setText("");
        txtRoll.setText("");
        cmbDepartment.setSelectedIndex(0);
        buttonGroupShift.clearSelection();
        cmbSession.setSelectedIndex(0);
        txtPhoneNo.setText("");
        txtHouseNo.setText("");
        txtRoadNo.setText("");
        txtBlockOrVillage.setText("");
        txtThana.setText("");
        txtDistrict.setText("");
        txtDivision.setText("");
        cmbCountry.setSelectedIndex(0);
        lblMsg.setText("");
        refreshTable();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtName.getText().equals("")) {
            lblMsg.setText("You can not leave \'Name\' field empty.");
        } else if (txtReg.getText().equals("")) {
            lblMsg.setText("You can not leave \'Registration No.\' field empty.");
        } else if (txtRoll.getText().equals("")) {
            lblMsg.setText("You can not leave \'Roll No\' field empty.");
        } else if (cmbDepartment.getSelectedItem().equals("Select Department/Technology")) {
            lblMsg.setText("You need to select a Department/Technology.");
        } else if (buttonGroupShift.getSelection() == null) {
            lblMsg.setText("You have to select the \'Shift\'.");
        } else if (cmbSession.getSelectedItem().equals("Select Session")) {
            lblMsg.setText("You have to select \'Session\'.");
        } else {
            String rdbTF = null;
            if (rdbFirstShift.isSelected()) {
                rdbTF = "1st";
            } else if (rdbSecondShift.isSelected()) {
                rdbTF = "2nd";
            }

            Student student = new Student(txtName.getText(), txtReg.getText(), txtRoll.getText(), cmbDepartment.getSelectedItem().toString(), rdbTF, cmbSession.getSelectedItem().toString(), txtPhoneNo.getText(), txtHouseNo.getText(), txtRoadNo.getText(), txtBlockOrVillage.getText(), txtThana.getText(), txtDistrict.getText(), txtDivision.getText(), cmbCountry.getSelectedItem().toString());
            StudentService studentService = new StudentService();
            studentService.save(student);

            lblMsg.setText("1 Record Successfully Added!");

            refreshTable();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String rdbTF = null;
        if (rdbFirstShift.isSelected()) {
            rdbTF = "1st";
        } else if (rdbSecondShift.isSelected()) {
            rdbTF = "2nd";
        }
        Student student = new Student(txtName.getText(), txtReg.getText(), txtRoll.getText(), cmbDepartment.getSelectedItem().toString(), rdbTF, cmbSession.getSelectedItem().toString(), txtPhoneNo.getText(), txtHouseNo.getText(), txtRoadNo.getText(), txtBlockOrVillage.getText(), txtThana.getText(), txtDistrict.getText(), txtDivision.getText(), cmbCountry.getSelectedItem().toString());

        StudentService studentService = new StudentService();

        int row = tblDisplay.getSelectedRow();
        TableModel model = tblDisplay.getModel();
        student.setId(Integer.parseInt((model.getValueAt(row, 0)).toString()));

        studentService.update(student);

        lblMsg.setText("1 Record Successfully Updated!");
        refreshTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDisplayMouseClicked
        //Student student = new Student();
        int row = tblDisplay.getSelectedRow();
        TableModel model = tblDisplay.getModel();
        int stuID = Integer.parseInt((model.getValueAt(row, 0)).toString());
        try {

            PreparedStatement stmt = conn.prepareStatement("SELECT * FROM lmsdb_student WHERE id=?");
            stmt.setInt(1, stuID);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                txtName.setText(rs.getString(2));
                txtReg.setText(rs.getString(3));
                txtRoll.setText(rs.getString(4));
                cmbDepartment.setSelectedItem(rs.getString(5));
                if (rs.getString(6).equals("1st")) {
                    rdbFirstShift.setSelected(true);
                } else if (rs.getString(6).equals("2nd")) {
                    rdbSecondShift.setSelected(true);
                } else {
                    buttonGroupShift.clearSelection();
                }
                cmbSession.setSelectedItem(rs.getString(7));
                txtPhoneNo.setText(rs.getString(8));
                txtHouseNo.setText(rs.getString(9));
                txtRoadNo.setText(rs.getString(10));
                txtBlockOrVillage.setText(rs.getString(11));
                txtThana.setText(rs.getString(12));
                txtDistrict.setText(rs.getString(13));
                txtDivision.setText(rs.getString(14));
                cmbCountry.setSelectedItem(rs.getString(15));

            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentForm.class.getName()).log(Level.SEVERE, null, ex);
        }


        /*    int row = tblDisplay.getSelectedRow();
        TableModel model = tblDisplay.getModel();

        txtName.setText(model.getValueAt(row, 1).toString());
        txtReg.setText(model.getValueAt(row, 2).toString());
        txtRoll.setText(model.getValueAt(row, 3).toString());
        cmbDepartment.setSelectedItem(model.getValueAt(row, 4).toString());
        if (model.getValueAt(row, 5).equals("1st")) {
            rdbFirstShift.setSelected(true);
        } else if (model.getValueAt(row, 5).equals("2nd")) {
            rdbSecondShift.setSelected(true);
        } else {
            buttonGroupShift.clearSelection();
        }
        cmbSession.setSelectedItem(model.getValueAt(row, 6).toString());
        txtHouseNo.setText(model.getValueAt(row, 7).toString());
//        txtRoadNo.setText(model.getValueAt(row, 8).toString());
//        txtblockOrVillage.setText(model.getValueAt(row, 9).toString());
//        txtThana.setText(model.getValueAt(row, 10).toString());
//        comboDistrict.setSelectedItem(model.getValueAt(row, 11).toString());
//        comboDivision.setSelectedItem(model.getValueAt(row, 12).toString());
//        comboCountry.setSelectedItem(model.getValueAt(row, 13).toString()); */
    }//GEN-LAST:event_tblDisplayMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Student student = new Student();
        StudentService studentService = new StudentService();

        int row = tblDisplay.getSelectedRow();
        TableModel model = tblDisplay.getModel();
        student.setId(Integer.parseInt((model.getValueAt(row, 0)).toString()));

        studentService.delete(student.getId());

        lblMsg.setText("1 Record Successfully Deleted!");
        refreshTable();

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtRollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRollActionPerformed
        try {
            StudentService studentService = new StudentService();
            Student student = studentService.getUserByRollNo(txtRoll.getText());

            if (txtRoll.getText().equals(student.getRollNo())) {
                PreparedStatement stmt = conn.prepareStatement("SELECT * FROM lmsdb_student WHERE roll_no=?");
                stmt.setString(1, txtRoll.getText());
                ResultSet rs = stmt.executeQuery();
                while (rs.next()) {
                    txtName.setText(rs.getString(2));
                    txtReg.setText(rs.getString(3));
                    txtRoll.setText(rs.getString(4));
                    cmbDepartment.setSelectedItem(rs.getString(5));
                    if (rs.getString(6).equals("1st")) {
                        rdbFirstShift.setSelected(true);
                    } else if (rs.getString(6).equals("2nd")) {
                        rdbSecondShift.setSelected(true);
                    } else {
                        buttonGroupShift.clearSelection();
                    }
                    //rdbSecondShift.setText(rs.getString(6));
                    cmbSession.setSelectedItem(rs.getString(7));
                    txtPhoneNo.setText(rs.getString(8));
                    txtHouseNo.setText(rs.getString(9));
                    txtRoadNo.setText(rs.getString(10));
                    txtBlockOrVillage.setText(rs.getString(11));
                    txtThana.setText(rs.getString(12));
                    txtDistrict.setText(rs.getString(13));
                    txtDivision.setText(rs.getString(14));
                    cmbCountry.setSelectedItem(rs.getString(15));

                    //for table display
                    StudentService studentSerByRoll = new StudentService();
                    List<Student> pList = studentSerByRoll.getListByRollNo(txtRoll.getText());
                    DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
//                    model.setColumnCount(0);
//                    String columnAdd[] = {"ID", "Student Name", "Reg. No.", "Roll No.", "Department", "Shift", "Session", "Phone No", "Address"};
//                    for (String a : columnAdd) {
//                        model.addColumn(a);
//                    }
                    model.setRowCount(0);

                    Object[] row = new Object[9];

                    for (int i = 0; i < pList.size(); i++) {
                        row[0] = pList.get(i).getId();
                        row[1] = pList.get(i).getName();
                        row[2] = pList.get(i).getRegistrationNo();
                        row[3] = pList.get(i).getRollNo();
                        row[4] = pList.get(i).getDepartment();
                        row[5] = pList.get(i).getShift();
                        row[6] = pList.get(i).getSession();
                        row[7] = pList.get(i).getPhoneNo();
                        row[8] = pList.get(i).getHouseNo() + ", " + pList.get(i).getRoadNo() + ", " + pList.get(i).getBlockOrVillage() + ", " + pList.get(i).getThana() + ", " + pList.get(i).getDistrict() + ", " + pList.get(i).getDivision() + ", " + pList.get(i).getCountry();

                        model.addRow(row);
                    }

                    tblDisplay.getColumnModel().getColumn(0).setPreferredWidth(10);
                    tblDisplay.getColumnModel().getColumn(1).setPreferredWidth(140);
                    tblDisplay.getColumnModel().getColumn(2).setPreferredWidth(40);
                    tblDisplay.getColumnModel().getColumn(3).setPreferredWidth(40);
                    tblDisplay.getColumnModel().getColumn(4).setPreferredWidth(60);
                    tblDisplay.getColumnModel().getColumn(5).setPreferredWidth(20);
                    tblDisplay.getColumnModel().getColumn(6).setPreferredWidth(40);
                    tblDisplay.getColumnModel().getColumn(7).setPreferredWidth(60);
                    tblDisplay.getColumnModel().getColumn(8).setPreferredWidth(350);
                    tblDisplay.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

                }
                lblMsg.setText("");
            } else {
                txtName.setText("");
                txtReg.setText("");
                cmbDepartment.setSelectedIndex(0);
                buttonGroupShift.clearSelection();
                cmbSession.setSelectedIndex(0);
                txtPhoneNo.setText("");
                txtHouseNo.setText("");
                txtRoadNo.setText("");
                txtBlockOrVillage.setText("");
                txtThana.setText("");
                txtDistrict.setText("");
                txtDivision.setText("");
                cmbCountry.setSelectedIndex(0);

                lblMsg.setText("No Student information found.");
            }

        } catch (SQLException ex) {
            Logger.getLogger(BookInformation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtRollActionPerformed

    public void displayDatasWithinTable() {
        StudentService studentService = new StudentService();
        List<Student> pList = studentService.getList();
        DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
        Object[] row = new Object[9];

        for (int i = 0; i < pList.size(); i++) {
            row[0] = pList.get(i).getId();
            row[1] = pList.get(i).getName();
            row[2] = pList.get(i).getRegistrationNo();
            row[3] = pList.get(i).getRollNo();
            row[4] = pList.get(i).getDepartment();
            row[5] = pList.get(i).getShift();
            row[6] = pList.get(i).getSession();
            row[7] = pList.get(i).getPhoneNo();
            row[8] = pList.get(i).getHouseNo() + ", " + pList.get(i).getRoadNo() + ", " + pList.get(i).getBlockOrVillage() + ", " + pList.get(i).getThana() + ", " + pList.get(i).getDistrict() + ", " + pList.get(i).getDivision() + ", " + pList.get(i).getCountry();

            model.addRow(row);
        }

        tblDisplay.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblDisplay.getColumnModel().getColumn(1).setPreferredWidth(140);
        tblDisplay.getColumnModel().getColumn(2).setPreferredWidth(40);
        tblDisplay.getColumnModel().getColumn(3).setPreferredWidth(40);
        tblDisplay.getColumnModel().getColumn(4).setPreferredWidth(60);
        tblDisplay.getColumnModel().getColumn(5).setPreferredWidth(20);
        tblDisplay.getColumnModel().getColumn(6).setPreferredWidth(40);
        tblDisplay.getColumnModel().getColumn(7).setPreferredWidth(60);
        tblDisplay.getColumnModel().getColumn(8).setPreferredWidth(350);
        tblDisplay.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

    }

    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
        model.setRowCount(0);
        displayDatasWithinTable();
    }

    public void setAppIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/com/gov/npi/lms/images/lms-icon.png")));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroupShift;
    private javax.swing.JComboBox<String> cmbCountry;
    private javax.swing.JComboBox<String> cmbDepartment;
    private javax.swing.JComboBox<String> cmbSession;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JRadioButton rdbFirstShift;
    private javax.swing.JRadioButton rdbSecondShift;
    private javax.swing.JTable tblDisplay;
    private javax.swing.JTextField txtBlockOrVillage;
    private javax.swing.JTextField txtDistrict;
    private javax.swing.JTextField txtDivision;
    private javax.swing.JTextField txtHouseNo;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtReg;
    private javax.swing.JTextField txtRoadNo;
    private javax.swing.JTextField txtRoll;
    private javax.swing.JTextField txtThana;
    // End of variables declaration//GEN-END:variables
}

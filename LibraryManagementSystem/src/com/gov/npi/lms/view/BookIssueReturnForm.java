/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gov.npi.lms.view;

import com.gov.npi.lms.connection.DbConnection;
import com.gov.npi.lms.domain.BookIssueReturn;
import com.gov.npi.lms.domain.BookSummary;
import com.gov.npi.lms.domain.Student;
import com.gov.npi.lms.navigation.NavigationMenu;
import com.gov.npi.lms.service.BookIssueReturnService;
import com.gov.npi.lms.service.BookSummaryService;
import com.gov.npi.lms.service.StudentService;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Samrat Al Shahriar
 */
public class BookIssueReturnForm extends javax.swing.JFrame {
    
    Connection conn = DbConnection.getConnection();

    /**
     * Creates new form BookIssueReturnForm
     */
    public BookIssueReturnForm() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        setJMenuBar(NavigationMenu.commonNavMenu(this));
        refreshTable();
        setAppIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupReturnStatus = new javax.swing.ButtonGroup();
        buttonGroupSearch = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rdbYes = new javax.swing.JRadioButton();
        rdbNo = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        btnIssue = new javax.swing.JButton();
        btnReceive = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDisplay = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        txtStudentID = new javax.swing.JTextField();
        txtBookID = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();
        txtBookTitle = new javax.swing.JTextField();
        cmbDay = new javax.swing.JComboBox<>();
        cmbMonth = new javax.swing.JComboBox<>();
        cmbYear = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        lblMsg = new javax.swing.JLabel();
        rdbAccessionNo = new javax.swing.JRadioButton();
        rdbStudentID = new javax.swing.JRadioButton();
        rdbIssueID = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        lblMsgSearch = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Book Issue and Receieve || LMS");
        setBackground(new java.awt.Color(255, 204, 0));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Accession No");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Student ID");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Book Title");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Return Status");

        buttonGroupReturnStatus.add(rdbYes);
        rdbYes.setText("Yes");

        buttonGroupReturnStatus.add(rdbNo);
        rdbNo.setText("No");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Expire Date");

        btnIssue.setBackground(new java.awt.Color(255, 153, 102));
        btnIssue.setText("Issue");
        btnIssue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIssueActionPerformed(evt);
            }
        });

        btnReceive.setBackground(new java.awt.Color(255, 255, 153));
        btnReceive.setText("Receive");
        btnReceive.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReceive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceiveActionPerformed(evt);
            }
        });

        tblDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Issue ID", "Accession No", "Book Title", "Student ID", "Student Name", "Issue Date", "Return Date", "Return Status", "Expire Date"
            }
        ));
        tblDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDisplayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDisplay);

        btnSearch.setBackground(new java.awt.Color(204, 204, 255));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/gov/npi/lms/images/lms-search-icon.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtStudentID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtStudentIDMouseClicked(evt);
            }
        });
        txtStudentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentIDActionPerformed(evt);
            }
        });

        txtBookID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBookIDMouseClicked(evt);
            }
        });
        txtBookID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookIDActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Student Name");

        txtStudentName.setEditable(false);

        txtBookTitle.setEditable(false);
        txtBookTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookTitleActionPerformed(evt);
            }
        });

        cmbDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        cmbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        lblMsg.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        buttonGroupSearch.add(rdbAccessionNo);
        rdbAccessionNo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdbAccessionNo.setText("Accession No");

        buttonGroupSearch.add(rdbStudentID);
        rdbStudentID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdbStudentID.setText("Student ID");

        buttonGroupSearch.add(rdbIssueID);
        rdbIssueID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdbIssueID.setText("Issue ID");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Search By-");

        lblMsgSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblMsgSearch.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(rdbYes)
                                .addGap(43, 43, 43)
                                .addComponent(rdbNo))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(btnIssue)
                                .addGap(18, 18, 18)
                                .addComponent(btnReceive))
                            .addComponent(txtStudentID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(txtBookTitle)
                            .addComponent(txtBookID)
                            .addComponent(txtStudentName, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(lblMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnSearch)
                                .addGap(19, 19, 19)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(rdbIssueID)
                        .addGap(18, 18, 18)
                        .addComponent(rdbAccessionNo)
                        .addGap(18, 18, 18)
                        .addComponent(rdbStudentID)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblMsgSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(20, 20, 20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(rdbYes)
                            .addComponent(rdbNo))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cmbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnIssue)
                            .addComponent(btnReceive))
                        .addGap(0, 39, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdbAccessionNo)
                                    .addComponent(rdbIssueID)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(rdbStudentID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch))
                        .addGap(0, 0, 0)
                        .addComponent(lblMsgSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(1, 153, 51));

        jLabel17.setBackground(new java.awt.Color(0, 204, 204));
        jLabel17.setFont(new java.awt.Font("Monotype Corsiva", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 255, 204));
        jLabel17.setText("Library Management System");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 26)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 255, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Book Issue &  Receive ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addGap(28, 28, 28)
                .addComponent(jLabel7)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBookTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBookTitleActionPerformed

    private void txtBookIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookIDActionPerformed
        try {
            BookSummaryService bookSummaryService = new BookSummaryService();
            BookSummary bookSum = bookSummaryService.getBookSummaryByBookId(txtBookID.getText());
            
            if (txtBookID.getText().equals(bookSum.getBookId())) {
                txtBookTitle.setText(bookSum.getBookName());
                lblMsg.setText("");
            } else {
                lblMsg.setText("No book information found.");
            }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_txtBookIDActionPerformed

    private void txtStudentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentIDActionPerformed
        try {
            StudentService studentService = new StudentService();
            Student stu = studentService.getUserByRollNo(txtStudentID.getText());
            
            if (txtStudentID.getText().equals(stu.getRollNo())) {
                txtStudentName.setText(stu.getName());
                lblMsg.setText("");
            } else {
                lblMsg.setText("Student Information not found.");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtStudentIDActionPerformed

    private void btnIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIssueActionPerformed
        try {
            BookSummaryService bookSummaryService = new BookSummaryService();
            BookSummary bookSumForVerify = bookSummaryService.getBookSummaryByBookId(txtBookID.getText());
            
            StudentService studentService = new StudentService();
            Student stuForVerify = studentService.getUserByRollNo(txtStudentID.getText());
            
            BookSummaryService bookSumSer = new BookSummaryService();
            BookSummary bookSum = bookSumSer.getBookSummaryByBookId(txtBookID.getText());
            int nowAlreadyLend = bookSum.getAlreadyLend() + 1;
            int nowAvailableStock = bookSum.getAvilableStock() - 1;
            
            String rdbStatus = null;
            if (rdbYes.isSelected()) {
                rdbStatus = "Yes";
            } else if (rdbNo.isSelected()) {
                rdbStatus = "No";
            }
            DateFormat dateFormat = new SimpleDateFormat("dd-MM-YY hh:mm:ss a");
            Calendar cal = Calendar.getInstance();
            String getCurrentDate = (String) dateFormat.format(cal.getTime());
            System.out.println("daff" + txtStudentName.getText());
            if (txtBookTitle.getText().equals("") || txtStudentName.getText().equals("")) {
                lblMsg.setText("Please enter valid Book & Student Information");
            } else if (!bookSumForVerify.getBookName().equals(txtBookTitle.getText())) {
                lblMsg.setText("Error! Accession no. is not matching with book title.");
            } else if (!stuForVerify.getName().equals(txtStudentName.getText())) {
                lblMsg.setText("Error! Student Id is not matching with the follwing Student Name.");
            } else {
                if (cmbDay.getSelectedItem().equals("Day") || cmbMonth.getSelectedItem().equals("Month") || cmbYear.getSelectedItem().equals("Year")) {
                    lblMsg.setText("Please select a vaild day of return.");
                } else {
                    if (buttonGroupReturnStatus.getSelection() != null) {
                        if (rdbNo.isSelected()) {
                            if (bookSum.getAvilableStock() <= 0) {
                                lblMsg.setText("Sorry! No available stock.");
                            } else {
                                //update book summary
                                bookSumSer.updateWhenBookIssueOrReturn(bookSum, nowAlreadyLend, nowAvailableStock);

                                //insert inso issue book
                                BookIssueReturn bookIssue = new BookIssueReturn(txtBookID.getText(), txtBookTitle.getText(), txtStudentID.getText(), txtStudentName.getText(), getCurrentDate, rdbStatus, cmbDay.getSelectedItem().toString(), cmbMonth.getSelectedItem().toString(), cmbYear.getSelectedItem().toString());
                                BookIssueReturnService bookIssueService = new BookIssueReturnService();
                                bookIssueService.issueBook(bookIssue);
                                
                                lblMsg.setText("1 Book Issued Successfully!");
                            }
                        } else {
                            lblMsg.setText("Please Select \"No\" for Issue a Book");
                        }
                    } else {
                        lblMsg.setText("Please Select \"No\" for Issue a Book");
                    }
                }
            }
            
            refreshTable();
        } catch (Exception e) {
            lblMsg.setText("Set all fields correctly.");
        }
    }//GEN-LAST:event_btnIssueActionPerformed

    private void tblDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDisplayMouseClicked
        
        int row = tblDisplay.getSelectedRow();
        TableModel model = tblDisplay.getModel();
        int issueID = Integer.parseInt((model.getValueAt(row, 0)).toString());
        try {
            
            PreparedStatement stmt = conn.prepareStatement("SELECT * FROM lmsdb_book_issue_return WHERE id=?");
            stmt.setInt(1, issueID);
            ResultSet rs = stmt.executeQuery();
            while (rs.next()) {
                txtBookID.setText(rs.getString(2));
                txtBookTitle.setText(rs.getString(3));
                txtStudentID.setText(rs.getString(4));
                txtStudentName.setText(rs.getString(5));
                if (rs.getString(8).equals("Yes")) {
                    rdbYes.setSelected(true);
                } else if (rs.getString(8).equals("No")) {
                    rdbNo.setSelected(true);
                } else {
                    buttonGroupReturnStatus.clearSelection();
                }
                cmbDay.setSelectedItem(rs.getString(9));
                cmbMonth.setSelectedItem(rs.getString(10));
                cmbYear.setSelectedItem(rs.getString(11));
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblDisplayMouseClicked

    private void btnReceiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceiveActionPerformed
        BookSummaryService bookSumSer = new BookSummaryService();
        BookSummary bookSum = bookSumSer.getBookSummaryByBookId(txtBookID.getText());
        int nowAlreadyLend = bookSum.getAlreadyLend() - 1;
        int nowAvailableStock = bookSum.getAvilableStock() + 1;
        
        String rdbStatus = null;
        
        if (rdbYes.isSelected()) {
            rdbStatus = "Yes";
        } else if (rdbNo.isSelected()) {
            rdbStatus = "No";
        }
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-YY hh:mm:ss a");
        Calendar cal = Calendar.getInstance();
        String getCurrentDate = (String) dateFormat.format(cal.getTime());
        
        if (buttonGroupReturnStatus.getSelection() != null) {
            if (rdbYes.isSelected()) {
                BookIssueReturn bookReceive = new BookIssueReturn(getCurrentDate, rdbStatus);
                BookIssueReturnService bookReceiveService = new BookIssueReturnService();
                
                int row = tblDisplay.getSelectedRow();
                TableModel model = tblDisplay.getModel();
                bookReceive.setId(Integer.parseInt((model.getValueAt(row, 0)).toString()));
                bookReceiveService.returnBook(bookReceive);

                //for summary update
                bookSumSer.updateWhenBookIssueOrReturn(bookSum, nowAlreadyLend, nowAvailableStock);
                
                lblMsg.setText("1 Book Received Successfully!");
            } else {
                lblMsg.setText("Please Select \"Yes\" for Receive a Book");
            }
        } else {
            lblMsg.setText("Please Select \"Yes\" for Receive a Book");
        }
        
        refreshTable();

    }//GEN-LAST:event_btnReceiveActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        
        try {
            if (buttonGroupSearch.getSelection() != null) {
                if (rdbIssueID.isSelected()) {
                    BookIssueReturnService bookIssRetSer = new BookIssueReturnService();
                    List<BookIssueReturn> pList = bookIssRetSer.getIssuedBookById(Integer.parseInt(txtSearch.getText()));
                    DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
                    model.setRowCount(0);
                    Object[] row = new Object[9];
                    for (int i = 0; i < pList.size(); i++) {
                        row[0] = pList.get(i).getId();
                        row[1] = pList.get(i).getBookId();
                        row[2] = pList.get(i).getBookName();
                        row[3] = pList.get(i).getStudentId();
                        row[4] = pList.get(i).getStudentName();
                        row[5] = pList.get(i).getIssueDate();
                        row[6] = pList.get(i).getReturnDate();
                        row[7] = pList.get(i).getStatus();
                        row[8] = pList.get(i).getExpireDay() + "-" + pList.get(i).getExpireMonth() + "-" + pList.get(i).getExpireYear();
                        model.addRow(row);
                    }
                    
                    tblDisplay.getColumnModel().getColumn(0).setPreferredWidth(10);
                    tblDisplay.getColumnModel().getColumn(1).setPreferredWidth(60);
                    tblDisplay.getColumnModel().getColumn(2).setPreferredWidth(180);
                    tblDisplay.getColumnModel().getColumn(3).setPreferredWidth(40);
                    tblDisplay.getColumnModel().getColumn(4).setPreferredWidth(100);
                    tblDisplay.getColumnModel().getColumn(5).setPreferredWidth(110);
                    tblDisplay.getColumnModel().getColumn(6).setPreferredWidth(110);
                    tblDisplay.getColumnModel().getColumn(7).setPreferredWidth(50);
                    tblDisplay.getColumnModel().getColumn(8).setPreferredWidth(80);
                    tblDisplay.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
                    
                } else if (rdbAccessionNo.isSelected()) {
                    BookIssueReturnService bookIssRetSer = new BookIssueReturnService();
                    List<BookIssueReturn> pList = bookIssRetSer.getIssuedBookByBookId(txtSearch.getText());
                    DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
                    model.setRowCount(0);
                    Object[] row = new Object[9];
                    for (int i = 0; i < pList.size(); i++) {
                        row[0] = pList.get(i).getId();
                        row[1] = pList.get(i).getBookId();
                        row[2] = pList.get(i).getBookName();
                        row[3] = pList.get(i).getStudentId();
                        row[4] = pList.get(i).getStudentName();
                        row[5] = pList.get(i).getIssueDate();
                        row[6] = pList.get(i).getReturnDate();
                        row[7] = pList.get(i).getStatus();
                        row[8] = pList.get(i).getExpireDay() + "-" + pList.get(i).getExpireMonth() + "-" + pList.get(i).getExpireYear();
                        model.addRow(row);
                    }
                    
                    tblDisplay.getColumnModel().getColumn(0).setPreferredWidth(10);
                    tblDisplay.getColumnModel().getColumn(1).setPreferredWidth(60);
                    tblDisplay.getColumnModel().getColumn(2).setPreferredWidth(180);
                    tblDisplay.getColumnModel().getColumn(3).setPreferredWidth(40);
                    tblDisplay.getColumnModel().getColumn(4).setPreferredWidth(100);
                    tblDisplay.getColumnModel().getColumn(5).setPreferredWidth(110);
                    tblDisplay.getColumnModel().getColumn(6).setPreferredWidth(110);
                    tblDisplay.getColumnModel().getColumn(7).setPreferredWidth(50);
                    tblDisplay.getColumnModel().getColumn(8).setPreferredWidth(80);
                    tblDisplay.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
                    
                } else if (rdbStudentID.isSelected()) {
                    BookIssueReturnService bookIssRetSer = new BookIssueReturnService();
                    List<BookIssueReturn> pList = bookIssRetSer.getIssuedStudentByStudentId(txtSearch.getText());
                    DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
                    model.setRowCount(0);
                    Object[] row = new Object[9];
                    for (int i = 0; i < pList.size(); i++) {
                        row[0] = pList.get(i).getId();
                        row[1] = pList.get(i).getBookId();
                        row[2] = pList.get(i).getBookName();
                        row[3] = pList.get(i).getStudentId();
                        row[4] = pList.get(i).getStudentName();
                        row[5] = pList.get(i).getIssueDate();
                        row[6] = pList.get(i).getReturnDate();
                        row[7] = pList.get(i).getStatus();
                        row[8] = pList.get(i).getExpireDay() + "-" + pList.get(i).getExpireMonth() + "-" + pList.get(i).getExpireYear();
                        model.addRow(row);
                    }
                    
                    tblDisplay.getColumnModel().getColumn(0).setPreferredWidth(10);
                    tblDisplay.getColumnModel().getColumn(1).setPreferredWidth(60);
                    tblDisplay.getColumnModel().getColumn(2).setPreferredWidth(180);
                    tblDisplay.getColumnModel().getColumn(3).setPreferredWidth(40);
                    tblDisplay.getColumnModel().getColumn(4).setPreferredWidth(100);
                    tblDisplay.getColumnModel().getColumn(5).setPreferredWidth(110);
                    tblDisplay.getColumnModel().getColumn(6).setPreferredWidth(110);
                    tblDisplay.getColumnModel().getColumn(7).setPreferredWidth(50);
                    tblDisplay.getColumnModel().getColumn(8).setPreferredWidth(80);
                    tblDisplay.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
                }
                lblMsgSearch.setText("");
            } else {
                lblMsgSearch.setText("Please Select \'Issue ID\', or \'Accession No\' or \'Student ID\' for Search");
            }
        } catch (Exception e) {
            String rdbSearch = null;
            if (rdbIssueID.isSelected()) {
                rdbSearch = "Issue ID";
            } else if (rdbAccessionNo.isSelected()) {
                rdbSearch = "Accession No";
            } else if (rdbStudentID.isSelected()) {
                rdbSearch = "Student ID";
                lblMsgSearch.setText(" You have entered invalid " + rdbSearch);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtBookIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBookIDMouseClicked
        txtBookTitle.setText("");
    }//GEN-LAST:event_txtBookIDMouseClicked

    private void txtStudentIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtStudentIDMouseClicked
        txtStudentName.setText("");
    }//GEN-LAST:event_txtStudentIDMouseClicked
    
    public void displayDatasWithinTable() {
        BookIssueReturnService bookIssueReturnService = new BookIssueReturnService();
        List<BookIssueReturn> pList = bookIssueReturnService.getList();
        DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
        Object[] row = new Object[9];
        for (int i = 0; i < pList.size(); i++) {
            row[0] = pList.get(i).getId();
            row[1] = pList.get(i).getBookId();
            row[2] = pList.get(i).getBookName();
            row[3] = pList.get(i).getStudentId();
            row[4] = pList.get(i).getStudentName();
            row[5] = pList.get(i).getIssueDate();
            row[6] = pList.get(i).getReturnDate();
            row[7] = pList.get(i).getStatus();
            row[8] = pList.get(i).getExpireDay() + "-" + pList.get(i).getExpireMonth() + "-" + pList.get(i).getExpireYear();
            model.addRow(row);
        }
        
        tblDisplay.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblDisplay.getColumnModel().getColumn(1).setPreferredWidth(60);
        tblDisplay.getColumnModel().getColumn(2).setPreferredWidth(180);
        tblDisplay.getColumnModel().getColumn(3).setPreferredWidth(40);
        tblDisplay.getColumnModel().getColumn(4).setPreferredWidth(100);
        tblDisplay.getColumnModel().getColumn(5).setPreferredWidth(110);
        tblDisplay.getColumnModel().getColumn(6).setPreferredWidth(110);
        tblDisplay.getColumnModel().getColumn(7).setPreferredWidth(50);
        tblDisplay.getColumnModel().getColumn(8).setPreferredWidth(80);
        tblDisplay.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        
    }
    
    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tblDisplay.getModel();
        model.setRowCount(0);
        displayDatasWithinTable();
    }
    
    public void setAppIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/com/gov/npi/lms/images/lms-icon.png")));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookIssueReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookIssueReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookIssueReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookIssueReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookIssueReturnForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIssue;
    private javax.swing.JButton btnReceive;
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroupReturnStatus;
    private javax.swing.ButtonGroup buttonGroupSearch;
    private javax.swing.JComboBox<String> cmbDay;
    private javax.swing.JComboBox<String> cmbMonth;
    private javax.swing.JComboBox<String> cmbYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblMsgSearch;
    private javax.swing.JRadioButton rdbAccessionNo;
    private javax.swing.JRadioButton rdbIssueID;
    private javax.swing.JRadioButton rdbNo;
    private javax.swing.JRadioButton rdbStudentID;
    private javax.swing.JRadioButton rdbYes;
    private javax.swing.JTable tblDisplay;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtBookTitle;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStudentID;
    private javax.swing.JTextField txtStudentName;
    // End of variables declaration//GEN-END:variables
}
